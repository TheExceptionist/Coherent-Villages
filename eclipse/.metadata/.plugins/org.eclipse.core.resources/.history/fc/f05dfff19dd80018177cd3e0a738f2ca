package net.theexceptionist.coherentvillages.main.items;

import net.minecraft.client.model.ModelBiped;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.Entity;

/**
 * Roman_galea_gold - Username_02
 * Created using Tabula 7.0.0
 */
public class ModelRomanGalea extends ModelBiped {
    public ModelRenderer Helmet;
    public ModelRenderer zero;
    public ModelRenderer one;
    public ModelRenderer two;
    public ModelRenderer three;
    public ModelRenderer four;
    public ModelRenderer five;
    public ModelRenderer handle_1;
    public ModelRenderer handle_2;
    public ModelRenderer Helmet_cover;

    public ModelRomanGalea() {
        this.textureWidth = 64;
        this.textureHeight = 64;
        this.four = new ModelRenderer(this, 32, 0);
        this.four.setRotationPoint(0.0F, -2.5F, 7.0F);
        this.four.addBox(-0.5F, -1.5F, -2.5F, 1, 3, 5, 0.0F);
        this.setRotateAngle(four, -1.5707963267948966F, 0.0F, 0.0F);
        this.two = new ModelRenderer(this, 32, 6);
        this.two.setRotationPoint(0.0F, -8.0F, 4.0F);
        this.two.addBox(-0.5F, -2.0F, -3.0F, 1, 4, 6, 0.0F);
        this.setRotateAngle(two, -0.39269908169872414F, 0.0F, 0.0F);
        this.zero = new ModelRenderer(this, 32, 0);
        this.zero.setRotationPoint(0.0F, -8.5F, -1.0F);
        this.zero.addBox(-0.5F, -2.0F, -2.0F, 1, 4, 4, 0.0F);
        this.setRotateAngle(zero, 0.39269908169872414F, 0.0F, 0.0F);
        this.handle_1 = new ModelRenderer(this, 32, 1);
        this.handle_1.setRotationPoint(0.0F, -5.2F, 0.0F);
        this.handle_1.addBox(-0.5F, -1.5F, -0.5F, 1, 3, 1, 0.0F);
        this.setRotateAngle(handle_1, -0.39269908169872414F, 0.0F, 0.0F);
        this.handle_2 = new ModelRenderer(this, 33, 2);
        this.handle_2.setRotationPoint(0.0F, -5.5F, 1.5F);
        this.handle_2.addBox(-0.5F, -0.5F, -1.0F, 1, 1, 2, 0.0F);
        this.Helmet_cover = new ModelRenderer(this, 0, 16);
        this.Helmet_cover.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.Helmet_cover.addBox(-4.0F, -4.0F, -4.0F, 8, 8, 8, 0.0F);
        this.one = new ModelRenderer(this, 32, 5);
        this.one.mirror = true;
        this.one.setRotationPoint(0.0F, -8.5F, 1.0F);
        this.one.addBox(-0.5F, -2.5F, -3.0F, 1, 5, 6, 0.0F);
        this.Helmet = new ModelRenderer(this, 0, 0);
        this.Helmet.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.Helmet.addBox(-4.0F, -4.0F, -4.0F, 8, 8, 8, 0.0F);
        this.three = new ModelRenderer(this, 32, 7);
        this.three.setRotationPoint(0.0F, -6.0F, 6.0F);
        this.three.addBox(-0.5F, -2.0F, -2.5F, 1, 4, 5, 0.0F);
        this.setRotateAngle(three, -0.7853981633974483F, 0.0F, 0.0F);
        this.five = new ModelRenderer(this, 32, 0);
        this.five.setRotationPoint(0.0F, 1.0F, 6.5F);
        this.five.addBox(-0.5F, -1.0F, -1.0F, 1, 2, 2, 0.0F);
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) { 
        this.four.render(f5);
        this.two.render(f5);
        this.zero.render(f5);
        this.handle_1.render(f5);
        GlStateManager.pushMatrix();
        GlStateManager.translate(this.handle_2.offsetX, this.handle_2.offsetY, this.handle_2.offsetZ);
        GlStateManager.translate(this.handle_2.rotationPointX * f5, this.handle_2.rotationPointY * f5, this.handle_2.rotationPointZ * f5);
        GlStateManager.scale(0.9D, 1.0D, 1.0D);
        GlStateManager.translate(-this.handle_2.offsetX, -this.handle_2.offsetY, -this.handle_2.offsetZ);
        GlStateManager.translate(-this.handle_2.rotationPointX * f5, -this.handle_2.rotationPointY * f5, -this.handle_2.rotationPointZ * f5);
        this.handle_2.render(f5);
        GlStateManager.popMatrix();
        GlStateManager.pushMatrix();
        GlStateManager.translate(this.Helmet_cover.offsetX, this.Helmet_cover.offsetY, this.Helmet_cover.offsetZ);
        GlStateManager.translate(this.Helmet_cover.rotationPointX * f5, this.Helmet_cover.rotationPointY * f5, this.Helmet_cover.rotationPointZ * f5);
        GlStateManager.scale(1.1D, 1.1D, 1.1D);
        GlStateManager.translate(-this.Helmet_cover.offsetX, -this.Helmet_cover.offsetY, -this.Helmet_cover.offsetZ);
        GlStateManager.translate(-this.Helmet_cover.rotationPointX * f5, -this.Helmet_cover.rotationPointY * f5, -this.Helmet_cover.rotationPointZ * f5);
        this.Helmet_cover.render(f5);
        GlStateManager.popMatrix();
        GlStateManager.pushMatrix();
        GlStateManager.translate(this.one.offsetX, this.one.offsetY, this.one.offsetZ);
        GlStateManager.translate(this.one.rotationPointX * f5, this.one.rotationPointY * f5, this.one.rotationPointZ * f5);
        GlStateManager.scale(1.2D, 1.0D, 1.0D);
        GlStateManager.translate(-this.one.offsetX, -this.one.offsetY, -this.one.offsetZ);
        GlStateManager.translate(-this.one.rotationPointX * f5, -this.one.rotationPointY * f5, -this.one.rotationPointZ * f5);
        this.one.render(f5);
        GlStateManager.popMatrix();
        this.Helmet.render(f5);
        GlStateManager.pushMatrix();
        GlStateManager.translate(this.three.offsetX, this.three.offsetY, this.three.offsetZ);
        GlStateManager.translate(this.three.rotationPointX * f5, this.three.rotationPointY * f5, this.three.rotationPointZ * f5);
        GlStateManager.scale(1.1D, 1.0D, 1.0D);
        GlStateManager.translate(-this.three.offsetX, -this.three.offsetY, -this.three.offsetZ);
        GlStateManager.translate(-this.three.rotationPointX * f5, -this.three.rotationPointY * f5, -this.three.rotationPointZ * f5);
        this.three.render(f5);
        GlStateManager.popMatrix();
        this.five.render(f5);
    }

    /**
     * This is a helper function from Tabula to set the rotation of model parts
     */
    public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
        modelRenderer.rotateAngleX = x;
        modelRenderer.rotateAngleY = y;
        modelRenderer.rotateAngleZ = z;
    }
}
