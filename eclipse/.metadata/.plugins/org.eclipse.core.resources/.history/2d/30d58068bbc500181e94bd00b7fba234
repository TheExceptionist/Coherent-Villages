package net.theexceptionist.coherentvillages.events;

import java.util.Random;

import net.minecraft.entity.IEntityLivingData;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.math.BlockPos;
import net.minecraft.village.Village;
import net.minecraft.world.World;
import net.minecraftforge.event.entity.living.LivingSpawnEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.gameevent.TickEvent;
import net.theexceptionist.coherentvillages.entity.EntityVillagerMerchant;
import net.theexceptionist.coherentvillages.entity.bandit.AbstractVillagerBandit;
import net.theexceptionist.coherentvillages.entity.bandit.EntityVillagerBandit;
import net.theexceptionist.coherentvillages.main.Main;

public class EventOverrideMerchantSpawn {
	public static boolean raidInProgress = false;
	@SubscribeEvent
	public void initSpawnEvent(LivingSpawnEvent.CheckSpawn event)
	{
		Random rand = new Random();
		
		if(event.getEntityLiving() instanceof EntityVillagerMerchant)
		{
			EntityVillagerMerchant merchant = new EntityVillagerMerchant(event.getWorld());
			
			if(rand.nextInt(1000) > Main.merchant_spawn)
			{
				//merchant.
				//merchant.despawnGuards();
				merchant.setDead();
				//System.out.println("Working");
			}
		}
	}
	
	@SubscribeEvent
	public void checkRaid(TickEvent.PlayerTickEvent event)
	{
		EntityPlayer player = event.player;
		World world = event.player.world;
		Village village = world.villageCollection.getNearestVillage(player.getPosition(), 30);
		
		if(!world.isRemote && village != null){
			if(!world.isDaytime() && !raidInProgress){
				BlockPos center = village.getCenter();
				int radius = village.getVillageRadius();
				int offX = center.getX() + (world.rand.nextBoolean() == true ? 0 : radius * ((world.rand.nextBoolean() == true) ? -1 : 1));
				int offZ = center.getZ() + (world.rand.nextBoolean() == true ? 0 : radius * ((world.rand.nextBoolean() == true) ? -1 : 1));
				int y = world.getTopSolidOrLiquidBlock(new BlockPos(offX, 80, offZ)).getY();
				
				if(world.rand.nextInt(100) < 5)
				{
					int numBandits = world.rand.nextInt(20) + 5;
					BlockPos spawnpoint = new BlockPos(offX, y, offZ);
					AbstractVillagerBandit bandit = new EntityVillagerBandit(world);
					
					while(numBandits > 0)
					{
						bandit.onInitialSpawn(world.getDifficultyForLocation(spawnpoint), null);
	                	bandit.setLocationAndAngles(spawnpoint.getX(), spawnpoint.getY(), spawnpoint.getZ(), 0.0F, 0.0F);
	                    bandit.setSpawnPoint(spawnpoint.getX(), spawnpoint.getY(), spawnpoint.getZ());
	                    
	                    bandit.finalizeMobSpawn(world.getDifficultyForLocation(new BlockPos(bandit)), (IEntityLivingData)null, false);
	                    world.spawnEntity(bandit);
	                    
						spawnpoint.add(1, world.getTopSolidOrLiquidBlock(new BlockPos(spawnpoint.getX()+1, spawnpoint.getY(), spawnpoint.getZ())).getY(), 0);
						numBandits--;
					}
				}
				raidInProgress = true;
			}
			else if(world.isDaytime() && raidInProgress)
			{
				raidInProgress = false;
			}
		}
	}
	
}
